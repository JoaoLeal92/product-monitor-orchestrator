// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	entities "github.com/JoaoLeal92/product-monitor-orchestrator/entities"
	mock "github.com/stretchr/testify/mock"
)

// ProductNotificationService is an autogenerated mock type for the ProductNotificationService type
type ProductNotificationService struct {
	mock.Mock
}

// Execute provides a mock function with given fields: product, productSearchResult
func (_m *ProductNotificationService) Execute(product *entities.Product, productSearchResult *entities.ProductSearchResult) error {
	ret := _m.Called(product, productSearchResult)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Product, *entities.ProductSearchResult) error); ok {
		r0 = rf(product, productSearchResult)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewProductNotificationServiceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductNotificationService creates a new instance of ProductNotificationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductNotificationService(t NewProductNotificationServiceT) *ProductNotificationService {
	mock := &ProductNotificationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
