// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// LoggerContract is an autogenerated mock type for the LoggerContract type
type LoggerContract struct {
	mock.Mock
}

// AddFields provides a mock function with given fields: fields
func (_m *LoggerContract) AddFields(fields map[string]interface{}) {
	_m.Called(fields)
}

// ClearField provides a mock function with given fields: key
func (_m *LoggerContract) ClearField(key string) {
	_m.Called(key)
}

// Error provides a mock function with given fields: message
func (_m *LoggerContract) Error(message string) {
	_m.Called(message)
}

// Info provides a mock function with given fields: message
func (_m *LoggerContract) Info(message string) {
	_m.Called(message)
}

// Warn provides a mock function with given fields: message
func (_m *LoggerContract) Warn(message string) {
	_m.Called(message)
}

type NewLoggerContractT interface {
	mock.TestingT
	Cleanup(func())
}

// NewLoggerContract creates a new instance of LoggerContract. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLoggerContract(t NewLoggerContractT) *LoggerContract {
	mock := &LoggerContract{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
