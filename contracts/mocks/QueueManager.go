// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// QueueManager is an autogenerated mock type for the QueueManager type
type QueueManager struct {
	mock.Mock
}

// CloseChannel provides a mock function with given fields:
func (_m *QueueManager) CloseChannel() {
	_m.Called()
}

// CloseConnection provides a mock function with given fields:
func (_m *QueueManager) CloseConnection() {
	_m.Called()
}

// SendMessage provides a mock function with given fields: message
func (_m *QueueManager) SendMessage(message interface{}) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewQueueManagerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewQueueManager creates a new instance of QueueManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewQueueManager(t NewQueueManagerT) *QueueManager {
	mock := &QueueManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
